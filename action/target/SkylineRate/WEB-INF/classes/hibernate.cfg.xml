<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
                                         "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
 <session-factory >
  <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
  <property name="hibernate.connection.url">jdbc:mysql://localhost/tyh_rate?useUnicode=true&amp;characterEncoding=utf8</property>
  <property name="hibernate.connection.username">root</property>
  <property name="hibernate.connection.password"/>
  <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
  
   <property name="hibernate.connection.provider_class">com.zaxxer.hikari.hibernate.HikariConnectionProvider</property> 
	<!--  mysql 使用 PreparedStatement ,提高性能和安全性-->
	<property name="hibernate.hikari.dataSource.cachePrepStmts">true</property>
	<property name="hibernate.hikari.dataSource.prepStmtCacheSize">250</property>
	<property name="hibernate.hikari.dataSource.prepStmtCacheSqlLimit">2048</property>
 
<!-- 最小的空闲数据库连接数,默认是 same as maximumPoolSize,这个属性不推荐设置,设置maximumPoolSize 就可以了.也就是说启动
的时候,数据库就会存在maximumPoolSize 这么多的空闲连接了.因为这个值同时也是 minimumIdle -->
<!-- <property name="hibernate.hikari.minimumIdle">5</property> -->
  <!--  数据连接池最大的连接数,包括空闲的和在使用中的连接数,默认值为10-->
  <property name="hibernate.hikari.maximumPoolSize">5</property>
<!-- 连接超时的时间,如应用程序向数据库申请一个连接,,如果超过了这个时间没有回应,就返回一个sqlException ,单位毫秒,默认为30秒 -->
<property name="hibernate.hikari.connectionTimeout">30000</property>
  
   <!-- 一个数据库连接空闲时间,超过了这个时间,这个连接将会从连接池移除,默认时间为10 分钟,单位为毫秒;-->
   <!--这个或许解决了mysql 8小时没有连接就timeout 的问题-  -->
     <property name="hibernate.hikari.idleTimeout">600000</property>
  
  <!--  jdbc4.0 不推荐设置,这个是为哪些不支持jdbc4.0 Connection.isValid() 的旧数据库而设置的-->
<!--   <property name="hikaricp.connectionTestQuery">SELECT 1</property>  -->
  
   <!-- create 是可以创建表，update 是可以更新表的结构，不会丢失数据；可以先用create 创建，再改为update-->
<!-- create 的时候,执行任意一条sql 语句的代码,就会根据这里的映射文件和pojo .java 中的对象创建mysql 数据表-->	
<!--    <property name="hbm2ddl.auto">create</property>  -->
<!--   <property name="hbm2ddl.auto">update</property> -->
  <property name="hibernate.show_sql">true</property>
  <property name="hibernate.format_sql">true</property>
  
  <!--  thread 表示 由hibernate 自己管理事务,并且是session 和线程绑定,为线程安全的-->
<!--   <property name="hibernate.current_session_context_class">thread</property>  -->
 
  <!-- 下面是将事务交给spring 来管理,根据applicationContext 中的aop 来管理事务-->
 <property name="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</property>
 
  <mapping resource="com/skyline/pojo/Rate.hbm.xml"/>
  <mapping resource="com/skyline/pojo/CountryCode.hbm.xml"/>
  <mapping resource="com/skyline/pojo/Customer.hbm.xml"/>
  <mapping resource="com/skyline/pojo/Employee.hbm.xml"/>
  <mapping resource="com/skyline/pojo/User.hbm.xml"/>
  <mapping resource="com/skyline/pojo/Props.hbm.xml"/>
  <mapping resource="com/skyline/pojo/SendRecord.hbm.xml"/>
  <mapping resource="com/skyline/pojo/ExcelTp.hbm.xml"/>
  <mapping resource="com/skyline/pojo/Log.hbm.xml"/>
  <mapping resource="com/skyline/pojo/Email.hbm.xml"/>
  <mapping resource="com/skyline/pojo/RRate.hbm.xml"/> 
 </session-factory>
</hibernate-configuration>
